function [methodinfo,structs,enuminfo,ThunkLibName]=tankProto
%TANKPROTO Create structures to define interfaces found in 'tank'.

%This function was generated by loadlibrary.m parser version  on Sun Jun 17 16:28:43 2018
%perl options:'tank.i -outfile=tankProto.m -thunkfile=tankmylib_thunk_pcwin64.c -header=tank.h'
ival={cell(1,0)}; % change 0 to the actual number of functions to preallocate the data.
structs=[];enuminfo=[];fcnNum=1;
fcns=struct('name',ival,'calltype',ival,'LHS',ival,'RHS',ival,'alias',ival,'thunkname', ival);
MfilePath=fileparts(mfilename('fullpath'));
ThunkLibName=fullfile(MfilePath,'tankmylib_thunk_pcwin64');
% extern P_tank_T tank_P ; 
fcns.name{fcnNum}='tank_P'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='P_tank_T_Ptr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern B_tank_T tank_B ; 
fcns.name{fcnNum}='tank_B'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='B_tank_TPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern X_tank_T tank_X ; 
fcns.name{fcnNum}='tank_X'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='X_tank_TPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern DW_tank_T tank_DW ; 
fcns.name{fcnNum}='tank_DW'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='errorPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern ExtU_tank_T tank_U ; 
fcns.name{fcnNum}='tank_U'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='ExtU_tank_TPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern ExtY_tank_T tank_Y ; 
fcns.name{fcnNum}='tank_Y'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='ExtY_tank_TPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern real_T Timedelay ; 
fcns.name{fcnNum}='Timedelay'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='doublePtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern real_T buttomarea ; 
fcns.name{fcnNum}='buttomarea'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='doublePtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern real_T heightoftank ; 
fcns.name{fcnNum}='heightoftank'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='doublePtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern real_T maxinflow ; 
fcns.name{fcnNum}='maxinflow'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='doublePtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern real_T outpipcrosssection ; 
fcns.name{fcnNum}='outpipcrosssection'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='doublePtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern void tank_initialize ( void ); 
fcns.thunkname{fcnNum}='voidvoidThunk';fcns.name{fcnNum}='tank_initialize'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern void tank_step ( void ); 
fcns.thunkname{fcnNum}='voidvoidThunk';fcns.name{fcnNum}='tank_step'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern void tank_terminate ( void ); 
fcns.thunkname{fcnNum}='voidvoidThunk';fcns.name{fcnNum}='tank_terminate'; fcns.calltype{fcnNum}='Thunk'; fcns.LHS{fcnNum}=[]; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
% extern RT_MODEL_tank_T * const tank_M ; 
fcns.name{fcnNum}='tank_M'; fcns.calltype{fcnNum}='data'; fcns.LHS{fcnNum}='tag_RTM_tank_TPtrPtr'; fcns.RHS{fcnNum}=[];fcnNum=fcnNum+1;
structs.P_tank_T_.members=struct('Subsystem1_InitialPosition', 'double', 'tank1_initialHt', 'double', 'tankvolume_lb', 'double', 'LimitedIntegrator_lb', 'double', 'LimitedIntegrator_ub', 'double', 'TransportDelay_InitOutput', 'double');
structs.tag_RTM_tank_T.members=struct('');
structs.B_tank_T.members=struct('tankmaxinflow1', 'double', 'Fcn', 'double', 'Fcn_i', 'double');
structs.X_tank_T.members=struct('Integrator_CSTATE', 'double', 'Integrator_CSTATE_i', 'double');
structs.XDot_tank_T.members=struct('Integrator_CSTATE', 'double', 'Integrator_CSTATE_i', 'double');
structs.XDis_tank_T.members=struct('Integrator_CSTATE', 'uint8', 'Integrator_CSTATE_i', 'uint8');
structs.ODE3_IntgData.members=struct('y', 'doublePtr', 'f', 'doublePtr#3');
structs.ExtU_tank_T.members=struct('In1', 'double');
structs.ExtY_tank_T.members=struct('Out1', 'double', 'Out2', 'double');
methodinfo=fcns;